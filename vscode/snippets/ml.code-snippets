{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	//-------------------------------------------------
	// Python
	//-------------------------------------------------
	"Print to console": {
		"scope": "python",
		"prefix": "ml-model-randomForest",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},
	"Sklearn Ensemble Template": {
		"scope": "python",
		"prefix": "ml-model-ensemble",
		"body": [
			"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, VotingClassifier",
			"from sklearn.metrics import accuracy_score, classification_report",
			"",
			"# Base models",
			"rf = RandomForestClassifier(n_estimators=100, random_state=42)",
			"gb = GradientBoostingClassifier(n_estimators=100, learning_rate=0.1, random_state=42)",
			"",
			"# Ensemble model (Voting)",
			"ensemble = VotingClassifier(",
			"    estimators=[('rf', rf), ('gb', gb)],",
			"    voting='soft'  # or 'hard'",
			")",
			"",
			"# Train",
			"ensemble.fit(X_train, y_train)",
			"",
			"# Evaluate",
			"y_pred = ensemble.predict(X_test)",
			"print(f'Accuracy: {accuracy_score(y_test, y_pred):.4f}')",
			"print(classification_report(y_test, y_pred))"
		],
		"description": "Quick setup for ensemble models (RandomForest + GradientBoosting + VotingClassifier)"
	}
}